# A generic, single database configuration.

[alembic]
# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false


[# NOTE]
# This file was updated to avoid embedding database credentials directly in
# the ini. Use an environment variable named ALEMBIC_DATABASE_URL to provide
# the SQLAlchemy URL at runtime. This avoids problems with special characters
# in passwords (for example, '@' must be percent-encoded as '%40').
#
# Example (password contains @):
#   postgresql://postgres:x%40y@localhost/db_name
# Example using an environment variable in PowerShell (current session):
#   $env:ALEMBIC_DATABASE_URL = "postgresql://postgres:x%40y@localhost/db_name"
# To persist the variable for new sessions use setx (requires reopen):
#   setx ALEMBIC_DATABASE_URL "postgresql://postgres:x%40y@localhost/db_name"
#
# The value below tells Alembic to read the URL from the environment variable
# ALEMBIC_DATABASE_URL. You can also set ALEMBIC_DATABASE_URL in your
# deployment/task runner rather than editing this file.
sqlalchemy.url = env:ALEMBIC_DATABASE_URL

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic,flask_migrate

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console
qualname =

[logger_sqlalchemy]
level = INFO
handlers = console
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[logger_flask_migrate]
level = INFO
handlers =
qualname = flask_migrate

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
