"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShowBase = void 0;
var React = __importStar(require("react"));
var useShowController_1 = require("./useShowController");
var ShowContextProvider_1 = require("./ShowContextProvider");
var core_1 = require("../../core");
var auth_1 = require("../../auth");
/**
 * Call useShowController and put the value in a ShowContext
 *
 * Base class for <Show> components, without UI.
 *
 * Accepts any props accepted by useShowController:
 * - id: The record identifier
 * - resource: The resource
 *
 * @example // Custom show layout
 *
 * const PostShow = () => (
 *     <ShowBase resource="posts">
 *         <Grid container>
 *             <Grid item xs={8}>
 *                 <SimpleForm>
 *                     ...
 *                 </SimpleForm>
 *             </Grid>
 *             <Grid item xs={4}>
 *                 Show instructions...
 *             </Grid>
 *         </Grid>
 *         <div>
 *             Post related links...
 *         </div>
 *     </ShowBase>
 * );
 */
var ShowBase = function (_a) {
    var authLoading = _a.authLoading, loading = _a.loading, offline = _a.offline, error = _a.error, redirectOnError = _a.redirectOnError, children = _a.children, render = _a.render, props = __rest(_a, ["authLoading", "loading", "offline", "error", "redirectOnError", "children", "render"]);
    var hasError = error !== false && error !== undefined;
    var controllerProps = (0, useShowController_1.useShowController)(__assign(__assign({}, props), { redirectOnError: redirectOnError !== null && redirectOnError !== void 0 ? redirectOnError : (hasError ? false : undefined) }));
    var isAuthPending = (0, auth_1.useIsAuthPending)({
        resource: controllerProps.resource,
        action: 'show',
    });
    if (!render && !children) {
        throw new Error('<ShowBase> requires either a `render` prop or `children` prop');
    }
    var isPaused = controllerProps.isPaused, isPending = controllerProps.isPending, errorState = controllerProps.error;
    var showAuthLoading = isAuthPending &&
        !props.disableAuthentication &&
        authLoading !== false &&
        authLoading !== undefined;
    var showLoading = !isPaused &&
        ((!props.disableAuthentication && isAuthPending) || isPending) &&
        loading !== false &&
        loading !== undefined;
    var showOffline = isPaused && isPending && offline !== false && offline !== undefined;
    var showError = errorState && hasError;
    return (
    // We pass props.resource here as we don't need to create a new ResourceContext if the props is not provided
    React.createElement(core_1.OptionalResourceContextProvider, { value: props.resource },
        React.createElement(ShowContextProvider_1.ShowContextProvider, { value: controllerProps }, showAuthLoading
            ? authLoading
            : showLoading
                ? loading
                : showOffline
                    ? offline
                    : showError
                        ? error
                        : render
                            ? render(controllerProps)
                            : children)));
};
exports.ShowBase = ShowBase;
//# sourceMappingURL=ShowBase.js.map