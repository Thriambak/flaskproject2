import { RaRecord, MutationMode } from '../../types';
import { UseUpdateManyOptions } from '../../dataProvider/useUpdateMany';
export declare const useBulkUpdateController: <RecordType extends RaRecord = any, ErrorType = Error>(props: UseBulkUpdateControllerParams<RecordType, ErrorType>) => UseBulkUpdateControllerReturn;
export interface UseBulkUpdateControllerParams<RecordType extends RaRecord = any, MutationOptionsError = unknown> {
    onSuccess?: () => void;
    onError?: (error: any) => void;
    mutationMode?: MutationMode;
    mutationOptions?: UseUpdateManyOptions<RecordType, MutationOptionsError>;
    resource?: string;
    successMessage?: string;
}
export interface UseBulkUpdateControllerReturn<RecordType extends RaRecord = any> {
    isLoading: boolean;
    isPending: boolean;
    handleUpdate: (data: Partial<RecordType>) => void;
}
//# sourceMappingURL=useBulkUpdateController.d.ts.map