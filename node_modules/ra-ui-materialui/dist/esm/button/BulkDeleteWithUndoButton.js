var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import ActionDelete from '@mui/icons-material/Delete';
import { styled, useThemeProps, } from '@mui/material/styles';
import { useBulkDeleteController, } from 'ra-core';
import { Button } from './Button';
export var BulkDeleteWithUndoButton = function (inProps) {
    var props = useThemeProps({
        props: inProps,
        name: PREFIX,
    });
    var _a = props.label, label = _a === void 0 ? 'ra.action.delete' : _a, _b = props.icon, icon = _b === void 0 ? defaultIcon : _b, onClick = props.onClick, rest = __rest(props, ["label", "icon", "onClick"]);
    var _c = useBulkDeleteController(rest), handleDelete = _c.handleDelete, isPending = _c.isPending;
    var handleClick = function (e) {
        handleDelete();
        if (typeof onClick === 'function') {
            onClick(e);
        }
    };
    return (React.createElement(StyledButton, __assign({ onClick: handleClick, label: label, disabled: isPending, color: "error" }, sanitizeRestProps(rest)), icon));
};
var defaultIcon = React.createElement(ActionDelete, null);
var sanitizeRestProps = function (_a) {
    var classes = _a.classes, label = _a.label, resource = _a.resource, successMessage = _a.successMessage, rest = __rest(_a, ["classes", "label", "resource", "successMessage"]);
    return rest;
};
var PREFIX = 'RaBulkDeleteWithUndoButton';
var StyledButton = styled(Button, {
    name: PREFIX,
    overridesResolver: function (props, styles) { return styles.root; },
})(function () { return ({}); });
//# sourceMappingURL=BulkDeleteWithUndoButton.js.map